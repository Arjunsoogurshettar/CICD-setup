stage('Deploy and Push to Non-Prod EKS') {
    agent {
        label 'deploy'
    }
    when {
        expression { env.BRANCH_NAME in ['dev', 'qa', 'uat', 'stag'] }  // Runs for non-prod branches
    }
    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-nonprod')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key-nonprod')
        AWS_DEFAULT_REGION    = 'ap-south-1'  // Mumbai region for Non-Prod
    }
    steps {
        script {
            sh 'curl -o jenkins-test-1.0.jar http://3.111.168.233:8081/artifactory/libs-release/com/example/jenkins-test/1.0/jenkins-test-1.0.jar'

            sh '''
                aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin 123456789012.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
                docker build -t sstest . 
                docker tag sstest:latest 123456789012.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/sstest:latest
                docker push 123456789012.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/sstest:latest

                # Update kubeconfig for Non-Prod EKS
                if [[ '${BRANCH_NAME}' == 'dev' || '${BRANCH_NAME}' == 'qa' || '${BRANCH_NAME}' == 'uat' ]]; then
                     aws eks update-kubeconfig --region ap-south-1 --name nonprod-cluster-eksctl
                else
                    aws eks update-kubeconfig --region ap-south-1 --name nonprod-cluster-eksctl
                fi
                #aws eks update-kubeconfig --region ap-south-1 --name nonprod-cluster-eksctl
                kubectl apply -f manifest.yaml
                sleep 10
                kubectl get pods -n ss-nonprod
                kubectl get svc -n ss-nonprod
            '''
        }
    }
}

stage('Deploy and Push to Prod EKS') {
    agent {
        label 'deploy'
    }
    when {
        expression { env.BRANCH_NAME == 'prod' }  // Runs only for prod branch
    }
    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-prod')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key-prod')
        AWS_DEFAULT_REGION    = 'ap-south-1'  // Mumbai region for Prod
    }
    steps {
        script {
            sh 'curl -o jenkins-test-1.0.jar http://3.111.168.233:8081/artifactory/libs-release/com/example/jenkins-test/1.0/jenkins-test-1.0.jar'

            sh '''
                aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin 987654321098.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
                docker build -t sstest . 
                docker tag sstest:latest 987654321098.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/sstest:latest
                docker push 987654321098.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/sstest:latest

                # Update kubeconfig for Prod EKS
                aws eks update-kubeconfig --region ap-south-1 --name prod-cluster-eksctl
                kubectl apply -f manifest.yaml
                sleep 10
                kubectl get pods -n ss-prod
                kubectl get svc -n ss-prod
            '''
        }
    }
}
